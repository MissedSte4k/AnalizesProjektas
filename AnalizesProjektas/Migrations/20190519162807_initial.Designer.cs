// <auto-generated />
using System;
using AnalizesProjektas.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AnalizesProjektas.Migrations
{
    [DbContext(typeof(AnalizesProjektasContext))]
    [Migration("20190519162807_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AnalizesProjektas.Models.Delay", b =>
                {
                    b.Property<int>("DelayId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("NaujasAtvykimoLaikas");

                    b.Property<int?>("ShipmentId");

                    b.Property<DateTime>("VelavimoLaikas");

                    b.HasKey("DelayId");

                    b.HasIndex("ShipmentId");

                    b.ToTable("Delay");
                });

            modelBuilder.Entity("AnalizesProjektas.Models.Driver", b =>
                {
                    b.Property<int>("DriverId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MasinosBusena");

                    b.Property<string>("MasinosModelis");

                    b.Property<string>("MasinosNr");

                    b.Property<int>("MasinosTipas");

                    b.Property<string>("Vardas");

                    b.HasKey("DriverId");

                    b.ToTable("Driver");
                });

            modelBuilder.Entity("AnalizesProjektas.Models.Gate", b =>
                {
                    b.Property<int>("GateId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Vieta");

                    b.Property<int?>("WareHouseId");

                    b.HasKey("GateId");

                    b.HasIndex("WareHouseId");

                    b.ToTable("Gate");
                });

            modelBuilder.Entity("AnalizesProjektas.Models.GateTime", b =>
                {
                    b.Property<int>("GateTimeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Diena");

                    b.HasKey("GateTimeId");

                    b.ToTable("GateTime");
                });

            modelBuilder.Entity("AnalizesProjektas.Models.GateTransportType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GateId");

                    b.Property<int>("PriimamoMasinosTipas");

                    b.HasKey("Id");

                    b.HasIndex("GateId");

                    b.ToTable("GateTransportTypes");
                });

            modelBuilder.Entity("AnalizesProjektas.Models.SendingProduct", b =>
                {
                    b.Property<int>("SendingProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount");

                    b.Property<string>("Name");

                    b.Property<int?>("ShipmentId");

                    b.Property<int>("Type");

                    b.Property<int>("Weight");

                    b.HasKey("SendingProductId");

                    b.HasIndex("ShipmentId");

                    b.ToTable("SendingProducts");
                });

            modelBuilder.Entity("AnalizesProjektas.Models.Shipment", b =>
                {
                    b.Property<int>("ShipmentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Busena");

                    b.Property<DateTime>("CreationDate");

                    b.Property<int?>("DriverId");

                    b.Property<int?>("GateTimeId");

                    b.Property<int?>("SupplierId");

                    b.Property<string>("SupplierLink");

                    b.HasKey("ShipmentId");

                    b.HasIndex("DriverId");

                    b.HasIndex("GateTimeId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("AnalizesProjektas.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImonesPavadinimas");

                    b.Property<string>("TelefonoNr");

                    b.Property<string>("VardasPavarde");

                    b.Property<int>("fkShipmentId");

                    b.HasKey("SupplierId");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("AnalizesProjektas.Models.WareHouse", b =>
                {
                    b.Property<int>("WareHouseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InternalAddress");

                    b.HasKey("WareHouseId");

                    b.ToTable("WareHouse");
                });

            modelBuilder.Entity("AnalizesProjektas.Models.Delay", b =>
                {
                    b.HasOne("AnalizesProjektas.Models.Shipment")
                        .WithMany("delays")
                        .HasForeignKey("ShipmentId");
                });

            modelBuilder.Entity("AnalizesProjektas.Models.Gate", b =>
                {
                    b.HasOne("AnalizesProjektas.Models.WareHouse", "WareHouse")
                        .WithMany("Gates")
                        .HasForeignKey("WareHouseId");
                });

            modelBuilder.Entity("AnalizesProjektas.Models.GateTransportType", b =>
                {
                    b.HasOne("AnalizesProjektas.Models.Gate")
                        .WithMany("TransportType")
                        .HasForeignKey("GateId");
                });

            modelBuilder.Entity("AnalizesProjektas.Models.SendingProduct", b =>
                {
                    b.HasOne("AnalizesProjektas.Models.Shipment")
                        .WithMany("Products")
                        .HasForeignKey("ShipmentId");
                });

            modelBuilder.Entity("AnalizesProjektas.Models.Shipment", b =>
                {
                    b.HasOne("AnalizesProjektas.Models.Driver", "driver")
                        .WithMany()
                        .HasForeignKey("DriverId");

                    b.HasOne("AnalizesProjektas.Models.GateTime", "gateTime")
                        .WithMany()
                        .HasForeignKey("GateTimeId");

                    b.HasOne("AnalizesProjektas.Models.Supplier", "supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");
                });
#pragma warning restore 612, 618
        }
    }
}
